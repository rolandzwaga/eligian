// Manual Test File for User Story 1: Real-Time Type Error Detection
// Verify Typir integration works correctly in VS Code

// Action with typed parameters
action fadeIn(selector: string, duration: number) [
  selectElement($operationdata.selector)
  animate({opacity: 1}, $operationdata.duration)
]

// Untyped action (backward compatibility)
action oldStyleAction(target, time) [
  selectElement($operationdata.target)
  wait($operationdata.time)
]

timeline "test" in "#container" using raf {

  // ============================================================
  // TEST T034: Operation call type mismatch
  // ❌ ERROR: duration parameter expects number, got string
  // ============================================================

  at 0s..1s [
    selectElement("#myDiv")
    animate({opacity: 1}, "slow")  // ❌ ERROR: "slow" is string, expects number
  ] [
    selectElement("#myDiv")
    animate({opacity: 0}, 500)
  ]

  // ============================================================
  // TEST T035: Hover error message verification
  // ============================================================

  at 1s..2s [
    selectElement(123)  // ❌ ERROR: 123 is number, expects string
    animate("not an object", "not a number")  // ❌ ERROR: both args wrong type
  ] []

  // ============================================================
  // TEST T038: Action parameter type mismatch
  // ============================================================

  // ✅ CORRECT: Types match
  at 3s..4s { fadeIn("#element", 500) }

  // ❌ ERROR: First argument wrong type (expected string, got number)
  at 4s..5s { fadeIn(123, 500) }

  // ❌ ERROR: Second argument wrong type (expected number, got string)
  at 5s..6s { fadeIn("#element", "slow") }

  // ❌ ERROR: Both arguments wrong type
  at 6s..7s { fadeIn(999, "very slow") }

  // ============================================================
  // Positive test cases (should NOT show errors)
  // ============================================================

  at 7s..8s [
    selectElement("#correct")
    animate({opacity: 0.5}, 250)
    setStyle({color: "red"})
  ] []

  // ✅ Untyped action call (backward compatibility)
  at 8s..9s { oldStyleAction("#elem", 500) }
}
