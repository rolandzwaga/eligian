/**
 * Generated Operation Registry
 *
 * This file is auto-generated by generate-registry.ts
 * DO NOT EDIT MANUALLY - changes will be overwritten
 *
 * Generated: 2025-10-15T12:30:22.330Z
 * Total operations: 46
 */

import type { OperationRegistry } from './types.js';

export const OPERATION_REGISTRY: OperationRegistry = {
  "addClass": {
    "systemName": "addClass",
    "description": "This operation adds the specified class name to the specified selected element.",
    "parameters": [
      {
        "name": "className",
        "type": "ParameterType:className",
        "required": true
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "CSS"
  },
  "addControllerToElement": {
    "systemName": "addControllerToElement",
    "description": "This operation adds the specified controller instance to the given selected element.",
    "parameters": [],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      },
      {
        "name": "controllerInstance",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Controllers"
  },
  "addGlobalsToOperation": {
    "systemName": "addGlobalsToOperation",
    "description": "This operation adds the specified global property names to the current operation data.\nIt finally removes the `globalProperties` property from the current operation data.",
    "parameters": [
      {
        "name": "globalProperties",
        "type": "ParameterType:array",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Data"
  },
  "animate": {
    "systemName": "animate",
    "description": "This operation animates the specified selected element with the given [jQuery animation](https://api.jquery.com/animate/) properties, duration and easing.\nIt resolves after the animation completes.",
    "parameters": [
      {
        "name": "animationEasing",
        "type": "ParameterType:boolean",
        "required": false
      },
      {
        "name": "animationProperties",
        "type": "ParameterType:object",
        "required": true
      },
      {
        "name": "animationDuration",
        "type": "ParameterType:number",
        "required": true
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Animation"
  },
  "animateWithClass": {
    "systemName": "animateWithClass",
    "description": "This operation adds the specified class name to the specified selected element and assumes that this\nclass triggers and animation on the selected element. It then waits for this animation to complete\nbefore it resolves.",
    "parameters": [
      {
        "name": "className",
        "type": "ParameterType:className",
        "required": true
      },
      {
        "name": "removeClass",
        "type": "ParameterType:boolean",
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Animation"
  },
  "broadcastEvent": {
    "systemName": "broadcastEvent",
    "description": "This operation broadcasts the given event through the eventbus, along with the\nevent argumetns and optional event topic.",
    "parameters": [
      {
        "name": "eventArgs",
        "type": "ParameterType:array",
        "required": false
      },
      {
        "name": "eventTopic",
        "type": "ParameterType:eventTopic",
        "required": false
      },
      {
        "name": "eventName",
        "type": "ParameterType:eventName",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Events"
  },
  "calc": {
    "systemName": "calc",
    "description": "This operation calculates the given left and right hand operands using the specified operator.",
    "parameters": [
      {
        "name": "left",
        "type": "ParameterType:number",
        "required": true
      },
      {
        "name": "right",
        "type": "ParameterType:number",
        "required": true
      },
      {
        "name": "operator",
        "type": [
          {
            "value": "+"
          },
          {
            "value": "-"
          },
          {
            "value": "*"
          },
          {
            "value": "/"
          },
          {
            "value": "%"
          },
          {
            "value": "**"
          }
        ],
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "calculationResult",
        "type": "ParameterType:number"
      }
    ],
    "category": "Utilities"
  },
  "clearElement": {
    "systemName": "clearElement",
    "description": "This operation removes all of the children from the given selected element.",
    "parameters": [],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "DOM"
  },
  "clearOperationData": {
    "systemName": "clearOperationData",
    "description": "This operation removes all of the properties on the current operation date.\nOr, if the `properties` property is set only removes the properties defined by that list.",
    "parameters": [
      {
        "name": "properties",
        "type": "ParameterType:array",
        "required": false
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Data"
  },
  "createElement": {
    "systemName": "createElement",
    "description": "This operation creates the DOM element described by the given elementName and attributes and assigns\nthe instance to the `template` property on the current operation data.",
    "parameters": [
      {
        "name": "elementName",
        "type": [
          {
            "value": "object"
          },
          {
            "value": "a"
          },
          {
            "value": "abbr"
          },
          {
            "value": "address"
          },
          {
            "value": "area"
          },
          {
            "value": "article"
          },
          {
            "value": "aside"
          },
          {
            "value": "audio"
          },
          {
            "value": "b"
          },
          {
            "value": "base"
          },
          {
            "value": "bdi"
          },
          {
            "value": "bdo"
          },
          {
            "value": "blockquote"
          },
          {
            "value": "body"
          },
          {
            "value": "br"
          },
          {
            "value": "button"
          },
          {
            "value": "canvas"
          },
          {
            "value": "caption"
          },
          {
            "value": "cite"
          },
          {
            "value": "code"
          },
          {
            "value": "col"
          },
          {
            "value": "colgroup"
          },
          {
            "value": "data"
          },
          {
            "value": "datalist"
          },
          {
            "value": "dd"
          },
          {
            "value": "del"
          },
          {
            "value": "details"
          },
          {
            "value": "dfn"
          },
          {
            "value": "dialog"
          },
          {
            "value": "div"
          },
          {
            "value": "dl"
          },
          {
            "value": "dt"
          },
          {
            "value": "em"
          },
          {
            "value": "embed"
          },
          {
            "value": "fieldset"
          },
          {
            "value": "figcaption"
          },
          {
            "value": "figure"
          },
          {
            "value": "footer"
          },
          {
            "value": "form"
          },
          {
            "value": "h1"
          },
          {
            "value": "h2"
          },
          {
            "value": "h3"
          },
          {
            "value": "h4"
          },
          {
            "value": "h5"
          },
          {
            "value": "h6"
          },
          {
            "value": "head"
          },
          {
            "value": "header"
          },
          {
            "value": "hgroup"
          },
          {
            "value": "hr"
          },
          {
            "value": "html"
          },
          {
            "value": "i"
          },
          {
            "value": "iframe"
          },
          {
            "value": "img"
          },
          {
            "value": "input"
          },
          {
            "value": "ins"
          },
          {
            "value": "kbd"
          },
          {
            "value": "label"
          },
          {
            "value": "legend"
          },
          {
            "value": "li"
          },
          {
            "value": "link"
          },
          {
            "value": "main"
          },
          {
            "value": "map"
          },
          {
            "value": "mark"
          },
          {
            "value": "menu"
          },
          {
            "value": "meta"
          },
          {
            "value": "meter"
          },
          {
            "value": "nav"
          },
          {
            "value": "noscript"
          },
          {
            "value": "ol"
          },
          {
            "value": "optgroup"
          },
          {
            "value": "option"
          },
          {
            "value": "output"
          },
          {
            "value": "p"
          },
          {
            "value": "picture"
          },
          {
            "value": "pre"
          },
          {
            "value": "progress"
          },
          {
            "value": "q"
          },
          {
            "value": "rp"
          },
          {
            "value": "rt"
          },
          {
            "value": "ruby"
          },
          {
            "value": "s"
          },
          {
            "value": "samp"
          },
          {
            "value": "script"
          },
          {
            "value": "search"
          },
          {
            "value": "section"
          },
          {
            "value": "select"
          },
          {
            "value": "slot"
          },
          {
            "value": "small"
          },
          {
            "value": "source"
          },
          {
            "value": "span"
          },
          {
            "value": "strong"
          },
          {
            "value": "style"
          },
          {
            "value": "sub"
          },
          {
            "value": "summary"
          },
          {
            "value": "sup"
          },
          {
            "value": "table"
          },
          {
            "value": "tbody"
          },
          {
            "value": "td"
          },
          {
            "value": "template"
          },
          {
            "value": "textarea"
          },
          {
            "value": "tfoot"
          },
          {
            "value": "th"
          },
          {
            "value": "thead"
          },
          {
            "value": "time"
          },
          {
            "value": "title"
          },
          {
            "value": "tr"
          },
          {
            "value": "track"
          },
          {
            "value": "u"
          },
          {
            "value": "ul"
          },
          {
            "value": "var"
          },
          {
            "value": "video"
          },
          {
            "value": "wbr"
          }
        ],
        "required": true
      },
      {
        "name": "text",
        "type": "ParameterType:string",
        "required": false
      },
      {
        "name": "attributes",
        "type": "ParameterType:object",
        "required": false
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "template",
        "type": "ParameterType:object"
      }
    ],
    "category": "DOM"
  },
  "customFunction": {
    "systemName": "customFunction",
    "description": "This operation retrieves a custom function defined by the given system name\nand invokes it with the current operation data and eventbus.",
    "parameters": [
      {
        "name": "systemName",
        "type": "ParameterType:string",
        "required": false
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Utilities"
  },
  "endAction": {
    "systemName": "endAction",
    "description": "This operation invokes the {@link EndableAction}.end method on the specified action instance.\n\nThe action operation data is first merged with the current operation data before it is\npassed on to the action. After the action has completed the action operation data properties\nare removed from the current operation data.",
    "parameters": [
      {
        "name": "actionOperationData",
        "type": "ParameterType:object",
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "actionInstance",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Actions"
  },
  "endForEach": {
    "systemName": "endForEach",
    "description": "This operation checks if the current loop should end or start the next iteration.",
    "parameters": [],
    "dependencies": [],
    "outputs": [],
    "category": "Control Flow"
  },
  "endWhen": {
    "systemName": "endWhen",
    "description": "This operation cleans up after the {@link when}/{@link otherwise}/{@link endWhen} control flow ends.",
    "parameters": [],
    "dependencies": [],
    "outputs": [],
    "category": "Control Flow"
  },
  "extendController": {
    "systemName": "extendController",
    "description": "Extends the current controller with given extension.",
    "parameters": [
      {
        "name": "controllerExtension",
        "type": "ParameterType:object",
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "controllerInstance",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Controllers"
  },
  "forEach": {
    "systemName": "forEach",
    "description": "This operation iterates over the given collection.\n\nEach iteration the current item from the specified collection is\nassigned to the {@link IOperationContext.currentItem} property on the operation context.\n\nAt the start of the loop, the associated {@link endForEach} operation is determined and when\nthe last iteration is completed the flow control is set to the index of that operation.",
    "parameters": [
      {
        "name": "collection",
        "type": "ParameterType:array",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Control Flow"
  },
  "getAttributesFromElement": {
    "systemName": "getAttributesFromElement",
    "description": "This operation retrieves the values for the specified attribute names from  the given selected element.",
    "parameters": [
      {
        "name": "attributeNames",
        "type": "ParameterType:array",
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [
      {
        "name": "attributeValues",
        "type": "ParameterType:object"
      }
    ],
    "category": "Attributes"
  },
  "getControllerFromElement": {
    "systemName": "getControllerFromElement",
    "description": "This operation retrieves the controller instance with the specified name that is assigned to the given selected element.",
    "parameters": [
      {
        "name": "controllerName",
        "type": "ParameterType:controllerName",
        "required": true
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [
      {
        "name": "controllerInstance",
        "type": "ParameterType:object"
      }
    ],
    "category": "Controllers"
  },
  "getControllerInstance": {
    "systemName": "getControllerInstance",
    "description": "This operation retrieves an instance of the given controller name.\nIt assigns this instance to the `controllerInstance` property on the current operation data",
    "parameters": [
      {
        "name": "systemName",
        "type": [
          {
            "value": "EventListenerController"
          },
          {
            "value": "LabelController"
          },
          {
            "value": "LottieController"
          },
          {
            "value": "NavigationController"
          },
          {
            "value": "ProgressbarController"
          },
          {
            "value": "RoutingController"
          },
          {
            "value": "SubtitlesController"
          }
        ],
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "controllerInstance",
        "type": "ParameterType:object"
      }
    ],
    "category": "Controllers"
  },
  "getElementDimensions": {
    "systemName": "getElementDimensions",
    "description": "This operation calculates the width and height of the given selected element.\nIt assigns this struct to the dimensions property on the current operation data.\nOptionally the width and height can be modified using the given modifier string.\n\nThe modifier string is formatted in the following way:\n\n<operator><amount><optional-side><optional-precentage>|<ratio-definition>\n\nWhere the ratio modifier is formatted in the following way:\n<side>[ar=<ratio-left>-<ratio-right>]\n\nFor example, this modifier '+100h|w[ar=8-1]' will modifiy the dimensions like this:\nit will add a value of 100 to the height and modify the width by a ratio of 8 to 1 relative to the height.",
    "parameters": [
      {
        "name": "modifier",
        "type": "ParameterType:dimensionsModifier",
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [
      {
        "name": "dimensions",
        "type": "ParameterType:object"
      }
    ],
    "category": "Data"
  },
  "getImport": {
    "systemName": "getImport",
    "description": "This operation retrieves the import specified by the given `systemName` and\nassigns it to the `importedInstance` property on the current operaton date.",
    "parameters": [
      {
        "name": "systemName",
        "type": "ParameterType:systemName",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "importedInstance",
        "type": "ParameterType:object"
      }
    ],
    "category": "Data"
  },
  "getQueryParams": {
    "systemName": "getQueryParams",
    "description": "This operation retrieves the current query parameters from the browser's address bar and places\nthem on the returned operation data.",
    "parameters": [
      {
        "name": "defaultValues",
        "type": "ParameterType:object",
        "required": false
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "queryParams",
        "type": "ParameterType:object"
      }
    ],
    "category": "Data"
  },
  "invokeObjectMethod": {
    "systemName": "invokeObjectMethod",
    "description": "This operation invokes the specified method on the given object with the given optional arguments\nand assigns the result to the `methodResult` operationdata property.",
    "parameters": [
      {
        "name": "instance",
        "type": "ParameterType:object",
        "required": false
      },
      {
        "name": "methodName",
        "type": "ParameterType:string",
        "required": false
      },
      {
        "name": "methodArguments",
        "type": "ParameterType:array",
        "required": false
      },
      {
        "name": "methodResult",
        "type": "ParameterType:object",
        "required": false
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Utilities"
  },
  "loadJson": {
    "systemName": "loadJson",
    "description": "This operation loads a JSON file from the specified url and assigns it to the json\nproperty on the current operation data.\n\nIf the cache property is set to true and a cached value already exists, this is assigned\ninstead of re-retrieving it from the url.",
    "parameters": [
      {
        "name": "url",
        "type": "ParameterType:string",
        "required": true
      },
      {
        "name": "cache",
        "type": "ParameterType:boolean",
        "required": false
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "json",
        "type": "ParameterType:object"
      }
    ],
    "category": "Data"
  },
  "log": {
    "systemName": "log",
    "description": "This operation logs the current operation data, global data and context to the console.",
    "parameters": [],
    "dependencies": [],
    "outputs": [],
    "category": "Utilities"
  },
  "math": {
    "systemName": "math",
    "description": "This operation performs the given math function with the specified arguments.",
    "parameters": [
      {
        "name": "args",
        "type": "ParameterType:array",
        "required": true
      },
      {
        "name": "functionName",
        "type": [
          {
            "value": "abs"
          },
          {
            "value": "acos"
          },
          {
            "value": "asin"
          },
          {
            "value": "atan"
          },
          {
            "value": "atan2"
          },
          {
            "value": "ceil"
          },
          {
            "value": "cos"
          },
          {
            "value": "exp"
          },
          {
            "value": "floor"
          },
          {
            "value": "log"
          },
          {
            "value": "max"
          },
          {
            "value": "min"
          },
          {
            "value": "pow"
          },
          {
            "value": "random"
          },
          {
            "value": "round"
          },
          {
            "value": "sin"
          },
          {
            "value": "sqrt"
          },
          {
            "value": "tan"
          },
          {
            "value": "clz32"
          },
          {
            "value": "imul"
          },
          {
            "value": "sign"
          },
          {
            "value": "log10"
          },
          {
            "value": "log2"
          },
          {
            "value": "log1p"
          },
          {
            "value": "expm1"
          },
          {
            "value": "cosh"
          },
          {
            "value": "sinh"
          },
          {
            "value": "tanh"
          },
          {
            "value": "acosh"
          },
          {
            "value": "asinh"
          },
          {
            "value": "atanh"
          },
          {
            "value": "hypot"
          },
          {
            "value": "trunc"
          },
          {
            "value": "fround"
          },
          {
            "value": "cbrt"
          },
          {
            "value": "f16round"
          }
        ],
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "mathResult",
        "type": "ParameterType:number"
      }
    ],
    "category": "Utilities"
  },
  "otherwise": {
    "systemName": "otherwise",
    "description": "If the preceeding {@link when} operation evaluates to `true` subsequent operations will\nbe skipped until an {@link endWhen} operation is encountered.",
    "parameters": [],
    "dependencies": [],
    "outputs": [],
    "category": "Control Flow"
  },
  "removeClass": {
    "systemName": "removeClass",
    "description": "This operation removes the spcified class name from the given selected element.",
    "parameters": [
      {
        "name": "className",
        "type": "ParameterType:className",
        "required": true
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "CSS"
  },
  "removeControllerFromElement": {
    "systemName": "removeControllerFromElement",
    "description": "This operation removes the controller with the specified name from the given selected element.",
    "parameters": [
      {
        "name": "controllerName",
        "type": "ParameterType:controllerName",
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Controllers"
  },
  "removeElement": {
    "systemName": "removeElement",
    "description": "This operation removes the given selected element from the DOM.",
    "parameters": [],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "DOM"
  },
  "removePropertiesFromOperationData": {
    "systemName": "removePropertiesFromOperationData",
    "description": "This operation removes the given list of properties from the current operation data.\nIt will also remove the property `propertyNames` from the result.",
    "parameters": [
      {
        "name": "propertyNames",
        "type": "ParameterType:array",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Data"
  },
  "reparentElement": {
    "systemName": "reparentElement",
    "description": "This operation moves the given selected element to the new parent that is defined\nby the specified `newParentSelector`.",
    "parameters": [
      {
        "name": "newParentSelector",
        "type": "ParameterType:selector",
        "required": true
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "DOM"
  },
  "requestAction": {
    "systemName": "requestAction",
    "description": "This operation requests an action instance with the specified name and assigns it\nto the `actionInstance` property on the current operation data.",
    "parameters": [
      {
        "name": "systemName",
        "type": "ParameterType:actionName",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "actionInstance",
        "type": "ParameterType:object"
      }
    ],
    "category": "Actions"
  },
  "resizeAction": {
    "systemName": "resizeAction",
    "description": "",
    "parameters": [
      {
        "name": "actionOperationData",
        "type": "ParameterType:object",
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "actionInstance",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Actions"
  },
  "selectElement": {
    "systemName": "selectElement",
    "description": "This operation selects one or more elements using the specified selector.\n\nIf `useSelectedElementAsRoot` is set to true and a valid DOM element is assigned\nto the current operation data's `selectedElement` property\nthen the element will be looked for only in the descendant elements of this DOM element.",
    "parameters": [
      {
        "name": "selector",
        "type": "ParameterType:selector",
        "required": true
      },
      {
        "name": "useSelectedElementAsRoot",
        "type": "ParameterType:boolean",
        "required": false
      }
    ],
    "dependencies": [],
    "outputs": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "category": "DOM"
  },
  "setData": {
    "systemName": "setData",
    "description": "This operation assigns the specified properties to the specified data targets.",
    "parameters": [
      {
        "name": "properties",
        "type": "ParameterType:object",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Data"
  },
  "setElementAttributes": {
    "systemName": "setElementAttributes",
    "description": "This operation sets the specified set of attributes on the given selected element.",
    "parameters": [
      {
        "name": "attributes",
        "type": "ParameterType:object",
        "required": true
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Attributes"
  },
  "setElementContent": {
    "systemName": "setElementContent",
    "description": "This operation sets the specified content defined by the value assigned to the template property\nto the given selected element.\n\nWhen the `insertionType` is set to `overwrite` the contents of the selected element are replaced\nby the given template.\nWhen set to `append` the new content will be inserted after the current content.\nWhen set to `prepend` the new content will be inserted before the current content.",
    "parameters": [
      {
        "name": "insertionType",
        "type": [
          {
            "value": "overwrite"
          },
          {
            "value": "append"
          },
          {
            "value": "prepend"
          }
        ],
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      },
      {
        "name": "template",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Content"
  },
  "setGlobalData": {
    "systemName": "setGlobalData",
    "description": "This operation copies the specified properties from the operationData to the global data.",
    "parameters": [
      {
        "name": "propertyNames",
        "type": "ParameterType:array",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Data"
  },
  "setOperationData": {
    "systemName": "setOperationData",
    "description": "This operation assigns the specified properties to the current operation data.\nWhen override is set to true the properties replace the current operation data entirely.",
    "parameters": [
      {
        "name": "override",
        "type": "ParameterType:boolean",
        "required": false
      },
      {
        "name": "properties",
        "type": "ParameterType:object",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Data"
  },
  "setStyle": {
    "systemName": "setStyle",
    "description": "This operation assigns the specified CSS style properties to the\ngiven selected element.",
    "parameters": [
      {
        "name": "properties",
        "type": "ParameterType:object",
        "required": true
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Styling"
  },
  "startAction": {
    "systemName": "startAction",
    "description": "This operation starts the specified action instance using the given action operation data.\n\nThe action operation data is first merged with the current operation data before it is\npassed on to the action. After the action has completed the action operation data properties\nare removed from the current operation data.",
    "parameters": [
      {
        "name": "actionOperationData",
        "type": "ParameterType:object",
        "required": false
      }
    ],
    "dependencies": [
      {
        "name": "actionInstance",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "Actions"
  },
  "toggleClass": {
    "systemName": "toggleClass",
    "description": "This operation toggles the specfied class name on the given selected element.\n\nMeaning, if the specified class name exists on the given element it will be removed,\notherwise it will be added.",
    "parameters": [
      {
        "name": "className",
        "type": "ParameterType:className",
        "required": true
      }
    ],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "CSS"
  },
  "toggleElement": {
    "systemName": "toggleElement",
    "description": "This operation toggles the visibility of the given selected element.\n\nMeaning, if the element is hidden, it will be made visible, otherwise\nit will be hidden.",
    "parameters": [],
    "dependencies": [
      {
        "name": "selectedElement",
        "type": "ParameterType:object"
      }
    ],
    "outputs": [],
    "category": "DOM"
  },
  "wait": {
    "systemName": "wait",
    "description": "This operation waits for the specified amount of milliseconds.",
    "parameters": [
      {
        "name": "milliseconds",
        "type": "ParameterType:number",
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Utilities"
  },
  "when": {
    "systemName": "when",
    "description": "When the given expression evaluates to false, subsequent operations will be skipped\nuntil an {@link endWhen} or {@link otherwise} operation is encountered.\n\nPractically, this means an `if` or `if`/`else` statement control flow implementation in a list of operations.",
    "parameters": [
      {
        "name": "expression",
        "type": [
          {
            "value": "`${number}!=${number}`"
          },
          {
            "value": "`${number}!='${string}'`"
          },
          {
            "value": "`${number}!=operationdata.${string}`"
          },
          {
            "value": "`${number}!=globaldata.${string}`"
          },
          {
            "value": "`${number}!=context.${string}`"
          },
          {
            "value": "`${number}==${number}`"
          },
          {
            "value": "`${number}=='${string}'`"
          },
          {
            "value": "`${number}==operationdata.${string}`"
          },
          {
            "value": "`${number}==globaldata.${string}`"
          },
          {
            "value": "`${number}==context.${string}`"
          },
          {
            "value": "`${number}>=${number}`"
          },
          {
            "value": "`${number}>='${string}'`"
          },
          {
            "value": "`${number}>=operationdata.${string}`"
          },
          {
            "value": "`${number}>=globaldata.${string}`"
          },
          {
            "value": "`${number}>=context.${string}`"
          },
          {
            "value": "`${number}<=${number}`"
          },
          {
            "value": "`${number}<='${string}'`"
          },
          {
            "value": "`${number}<=operationdata.${string}`"
          },
          {
            "value": "`${number}<=globaldata.${string}`"
          },
          {
            "value": "`${number}<=context.${string}`"
          },
          {
            "value": "`${number}>${number}`"
          },
          {
            "value": "`${number}>'${string}'`"
          },
          {
            "value": "`${number}>operationdata.${string}`"
          },
          {
            "value": "`${number}>globaldata.${string}`"
          },
          {
            "value": "`${number}>context.${string}`"
          },
          {
            "value": "`${number}<${number}`"
          },
          {
            "value": "`${number}<'${string}'`"
          },
          {
            "value": "`${number}<operationdata.${string}`"
          },
          {
            "value": "`${number}<globaldata.${string}`"
          },
          {
            "value": "`${number}<context.${string}`"
          },
          {
            "value": "`'${string}'!=${number}`"
          },
          {
            "value": "`'${string}'!='${string}'`"
          },
          {
            "value": "`'${string}'!=operationdata.${string}`"
          },
          {
            "value": "`'${string}'!=globaldata.${string}`"
          },
          {
            "value": "`'${string}'!=context.${string}`"
          },
          {
            "value": "`'${string}'==${number}`"
          },
          {
            "value": "`'${string}'=='${string}'`"
          },
          {
            "value": "`'${string}'==operationdata.${string}`"
          },
          {
            "value": "`'${string}'==globaldata.${string}`"
          },
          {
            "value": "`'${string}'==context.${string}`"
          },
          {
            "value": "`'${string}'>=${number}`"
          },
          {
            "value": "`'${string}'>='${string}'`"
          },
          {
            "value": "`'${string}'>=operationdata.${string}`"
          },
          {
            "value": "`'${string}'>=globaldata.${string}`"
          },
          {
            "value": "`'${string}'>=context.${string}`"
          },
          {
            "value": "`'${string}'<=${number}`"
          },
          {
            "value": "`'${string}'<='${string}'`"
          },
          {
            "value": "`'${string}'<=operationdata.${string}`"
          },
          {
            "value": "`'${string}'<=globaldata.${string}`"
          },
          {
            "value": "`'${string}'<=context.${string}`"
          },
          {
            "value": "`'${string}'>${number}`"
          },
          {
            "value": "`'${string}'>'${string}'`"
          },
          {
            "value": "`'${string}'>operationdata.${string}`"
          },
          {
            "value": "`'${string}'>globaldata.${string}`"
          },
          {
            "value": "`'${string}'>context.${string}`"
          },
          {
            "value": "`'${string}'<${number}`"
          },
          {
            "value": "`'${string}'<'${string}'`"
          },
          {
            "value": "`'${string}'<operationdata.${string}`"
          },
          {
            "value": "`'${string}'<globaldata.${string}`"
          },
          {
            "value": "`'${string}'<context.${string}`"
          },
          {
            "value": "`operationdata.${string}!=${number}`"
          },
          {
            "value": "`operationdata.${string}!='${string}'`"
          },
          {
            "value": "`operationdata.${string}!=operationdata.${string}`"
          },
          {
            "value": "`operationdata.${string}!=globaldata.${string}`"
          },
          {
            "value": "`operationdata.${string}!=context.${string}`"
          },
          {
            "value": "`operationdata.${string}==${number}`"
          },
          {
            "value": "`operationdata.${string}=='${string}'`"
          },
          {
            "value": "`operationdata.${string}==operationdata.${string}`"
          },
          {
            "value": "`operationdata.${string}==globaldata.${string}`"
          },
          {
            "value": "`operationdata.${string}==context.${string}`"
          },
          {
            "value": "`operationdata.${string}>=${number}`"
          },
          {
            "value": "`operationdata.${string}>='${string}'`"
          },
          {
            "value": "`operationdata.${string}>=operationdata.${string}`"
          },
          {
            "value": "`operationdata.${string}>=globaldata.${string}`"
          },
          {
            "value": "`operationdata.${string}>=context.${string}`"
          },
          {
            "value": "`operationdata.${string}<=${number}`"
          },
          {
            "value": "`operationdata.${string}<='${string}'`"
          },
          {
            "value": "`operationdata.${string}<=operationdata.${string}`"
          },
          {
            "value": "`operationdata.${string}<=globaldata.${string}`"
          },
          {
            "value": "`operationdata.${string}<=context.${string}`"
          },
          {
            "value": "`operationdata.${string}>${number}`"
          },
          {
            "value": "`operationdata.${string}>'${string}'`"
          },
          {
            "value": "`operationdata.${string}>operationdata.${string}`"
          },
          {
            "value": "`operationdata.${string}>globaldata.${string}`"
          },
          {
            "value": "`operationdata.${string}>context.${string}`"
          },
          {
            "value": "`operationdata.${string}<${number}`"
          },
          {
            "value": "`operationdata.${string}<'${string}'`"
          },
          {
            "value": "`operationdata.${string}<operationdata.${string}`"
          },
          {
            "value": "`operationdata.${string}<globaldata.${string}`"
          },
          {
            "value": "`operationdata.${string}<context.${string}`"
          },
          {
            "value": "`globaldata.${string}!=${number}`"
          },
          {
            "value": "`globaldata.${string}!='${string}'`"
          },
          {
            "value": "`globaldata.${string}!=operationdata.${string}`"
          },
          {
            "value": "`globaldata.${string}!=globaldata.${string}`"
          },
          {
            "value": "`globaldata.${string}!=context.${string}`"
          },
          {
            "value": "`globaldata.${string}==${number}`"
          },
          {
            "value": "`globaldata.${string}=='${string}'`"
          },
          {
            "value": "`globaldata.${string}==operationdata.${string}`"
          },
          {
            "value": "`globaldata.${string}==globaldata.${string}`"
          },
          {
            "value": "`globaldata.${string}==context.${string}`"
          },
          {
            "value": "`globaldata.${string}>=${number}`"
          },
          {
            "value": "`globaldata.${string}>='${string}'`"
          },
          {
            "value": "`globaldata.${string}>=operationdata.${string}`"
          },
          {
            "value": "`globaldata.${string}>=globaldata.${string}`"
          },
          {
            "value": "`globaldata.${string}>=context.${string}`"
          },
          {
            "value": "`globaldata.${string}<=${number}`"
          },
          {
            "value": "`globaldata.${string}<='${string}'`"
          },
          {
            "value": "`globaldata.${string}<=operationdata.${string}`"
          },
          {
            "value": "`globaldata.${string}<=globaldata.${string}`"
          },
          {
            "value": "`globaldata.${string}<=context.${string}`"
          },
          {
            "value": "`globaldata.${string}>${number}`"
          },
          {
            "value": "`globaldata.${string}>'${string}'`"
          },
          {
            "value": "`globaldata.${string}>operationdata.${string}`"
          },
          {
            "value": "`globaldata.${string}>globaldata.${string}`"
          },
          {
            "value": "`globaldata.${string}>context.${string}`"
          },
          {
            "value": "`globaldata.${string}<${number}`"
          },
          {
            "value": "`globaldata.${string}<'${string}'`"
          },
          {
            "value": "`globaldata.${string}<operationdata.${string}`"
          },
          {
            "value": "`globaldata.${string}<globaldata.${string}`"
          },
          {
            "value": "`globaldata.${string}<context.${string}`"
          },
          {
            "value": "`context.${string}!=${number}`"
          },
          {
            "value": "`context.${string}!='${string}'`"
          },
          {
            "value": "`context.${string}!=operationdata.${string}`"
          },
          {
            "value": "`context.${string}!=globaldata.${string}`"
          },
          {
            "value": "`context.${string}!=context.${string}`"
          },
          {
            "value": "`context.${string}==${number}`"
          },
          {
            "value": "`context.${string}=='${string}'`"
          },
          {
            "value": "`context.${string}==operationdata.${string}`"
          },
          {
            "value": "`context.${string}==globaldata.${string}`"
          },
          {
            "value": "`context.${string}==context.${string}`"
          },
          {
            "value": "`context.${string}>=${number}`"
          },
          {
            "value": "`context.${string}>='${string}'`"
          },
          {
            "value": "`context.${string}>=operationdata.${string}`"
          },
          {
            "value": "`context.${string}>=globaldata.${string}`"
          },
          {
            "value": "`context.${string}>=context.${string}`"
          },
          {
            "value": "`context.${string}<=${number}`"
          },
          {
            "value": "`context.${string}<='${string}'`"
          },
          {
            "value": "`context.${string}<=operationdata.${string}`"
          },
          {
            "value": "`context.${string}<=globaldata.${string}`"
          },
          {
            "value": "`context.${string}<=context.${string}`"
          },
          {
            "value": "`context.${string}>${number}`"
          },
          {
            "value": "`context.${string}>'${string}'`"
          },
          {
            "value": "`context.${string}>operationdata.${string}`"
          },
          {
            "value": "`context.${string}>globaldata.${string}`"
          },
          {
            "value": "`context.${string}>context.${string}`"
          },
          {
            "value": "`context.${string}<${number}`"
          },
          {
            "value": "`context.${string}<'${string}'`"
          },
          {
            "value": "`context.${string}<operationdata.${string}`"
          },
          {
            "value": "`context.${string}<globaldata.${string}`"
          },
          {
            "value": "`context.${string}<context.${string}`"
          }
        ],
        "required": true
      }
    ],
    "dependencies": [],
    "outputs": [],
    "category": "Control Flow"
  }
};
